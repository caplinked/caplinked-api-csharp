/* 
 * CapLinked API v1.0
 *
 * Core information security endpoints for managing files/folders, users/groups, uploads/downloads, and more.
 *
 * OpenAPI spec version: 2017-05-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Caplinked.Client;
using Caplinked.Api;
using Caplinked.Model;

namespace Caplinked.Test
{
    /// <summary>
    ///  Class for testing OrganizationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrganizationApiTests
    {
        private OrganizationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrganizationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrganizationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrganizationApi
            //Assert.IsInstanceOfType(typeof(OrganizationApi), instance, "instance is a OrganizationApi");
        }

        
        /// <summary>
        /// Test DeleteOrganizationMemberships
        /// </summary>
        [Test]
        public void DeleteOrganizationMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //instance.DeleteOrganizationMemberships(userId);
            
        }
        
        /// <summary>
        /// Test GetOrganization
        /// </summary>
        [Test]
        public void GetOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetOrganization();
            //Assert.IsInstanceOf<Organization> (response, "response is Organization");
        }
        
        /// <summary>
        /// Test GetOrganizationMemberships
        /// </summary>
        [Test]
        public void GetOrganizationMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetOrganizationMemberships();
            //Assert.IsInstanceOf<User> (response, "response is User");
        }
        
        /// <summary>
        /// Test PostOrganizationMemberships
        /// </summary>
        [Test]
        public void PostOrganizationMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //var response = instance.PostOrganizationMemberships(userId);
            //Assert.IsInstanceOf<OrganizationMembership> (response, "response is OrganizationMembership");
        }
        
        /// <summary>
        /// Test PutOrganization
        /// </summary>
        [Test]
        public void PutOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string description = null;
            //string location = null;
            //string billingEmail = null;
            //string url = null;
            //var response = instance.PutOrganization(name, description, location, billingEmail, url);
            //Assert.IsInstanceOf<Organization> (response, "response is Organization");
        }
        
        /// <summary>
        /// Test PutOrganizationSupportInformation
        /// </summary>
        [Test]
        public void PutOrganizationSupportInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string phoneNumber = null;
            //string email = null;
            //string website = null;
            //var response = instance.PutOrganizationSupportInformation(phoneNumber, email, website);
            //Assert.IsInstanceOf<SupportInformation> (response, "response is SupportInformation");
        }
        
    }

}
