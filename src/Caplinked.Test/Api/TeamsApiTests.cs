/* 
 * CapLinked API v1.0
 *
 * Core information security endpoints for managing files/folders, users/groups, uploads/downloads, and more.
 *
 * OpenAPI spec version: 2017-05-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Caplinked.Client;
using Caplinked.Api;
using Caplinked.Model;

namespace Caplinked.Test
{
    /// <summary>
    ///  Class for testing TeamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TeamsApiTests
    {
        private TeamsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TeamsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TeamsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TeamsApi
            //Assert.IsInstanceOfType(typeof(TeamsApi), instance, "instance is a TeamsApi");
        }

        
        /// <summary>
        /// Test DeleteTeamsIdMemberships
        /// </summary>
        [Test]
        public void DeleteTeamsIdMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //int? userId = null;
            //instance.DeleteTeamsIdMemberships(id, userId);
            
        }
        
        /// <summary>
        /// Test GetTeams
        /// </summary>
        [Test]
        public void GetTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTeams();
            //Assert.IsInstanceOf<Team> (response, "response is Team");
        }
        
        /// <summary>
        /// Test GetTeamsId
        /// </summary>
        [Test]
        public void GetTeamsIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTeamsId(id);
            //Assert.IsInstanceOf<Team> (response, "response is Team");
        }
        
        /// <summary>
        /// Test GetTeamsIdMemberships
        /// </summary>
        [Test]
        public void GetTeamsIdMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTeamsIdMemberships(id);
            //Assert.IsInstanceOf<List<Membership>> (response, "response is List<Membership>");
        }
        
        /// <summary>
        /// Test GetTeamsIdWatermarkSettings
        /// </summary>
        [Test]
        public void GetTeamsIdWatermarkSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTeamsIdWatermarkSettings(id);
            //Assert.IsInstanceOf<CustomWatermarkSetting> (response, "response is CustomWatermarkSetting");
        }
        
        /// <summary>
        /// Test PostTeams
        /// </summary>
        [Test]
        public void PostTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamName = null;
            //int? teamAllowedWorkspaces = null;
            //int? teamAllowedAdmins = null;
            //bool? teamDrmEnabled = null;
            //bool? teamWatermarking = null;
            //bool? teamSuppressEmails = null;
            //var response = instance.PostTeams(teamName, teamAllowedWorkspaces, teamAllowedAdmins, teamDrmEnabled, teamWatermarking, teamSuppressEmails);
            //Assert.IsInstanceOf<Team> (response, "response is Team");
        }
        
        /// <summary>
        /// Test PostTeamsIdMemberships
        /// </summary>
        [Test]
        public void PostTeamsIdMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //int? userId = null;
            //var response = instance.PostTeamsIdMemberships(id, userId);
            //Assert.IsInstanceOf<Membership> (response, "response is Membership");
        }
        
        /// <summary>
        /// Test PutTeamsId
        /// </summary>
        [Test]
        public void PutTeamsIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string teamName = null;
            //int? teamTeamOwnerId = null;
            //int? teamAllowedWorkspaces = null;
            //int? teamAllowedAdmins = null;
            //bool? teamDrmEnabled = null;
            //bool? teamWatermarking = null;
            //bool? teamSuppressEmails = null;
            //var response = instance.PutTeamsId(id, teamName, teamTeamOwnerId, teamAllowedWorkspaces, teamAllowedAdmins, teamDrmEnabled, teamWatermarking, teamSuppressEmails);
            //Assert.IsInstanceOf<Team> (response, "response is Team");
        }
        
    }

}
