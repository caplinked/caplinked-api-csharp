/* 
 * CapLinked API v1.0
 *
 * Core information security endpoints for managing files/folders, users/groups, uploads/downloads, and more.
 *
 * OpenAPI spec version: 2017-05-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Caplinked.Client;
using Caplinked.Api;
using Caplinked.Model;

namespace Caplinked.Test
{
    /// <summary>
    ///  Class for testing ActivitiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ActivitiesApiTests
    {
        private ActivitiesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ActivitiesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ActivitiesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ActivitiesApi
            //Assert.IsInstanceOfType(typeof(ActivitiesApi), instance, "instance is a ActivitiesApi");
        }

        
        /// <summary>
        /// Test GetActivitiesWorkspaceWorkspaceId
        /// </summary>
        [Test]
        public void GetActivitiesWorkspaceWorkspaceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workspaceId = null;
            //int? page = null;
            //int? perPage = null;
            //int? userId = null;
            //var response = instance.GetActivitiesWorkspaceWorkspaceId(workspaceId, page, perPage, userId);
            //Assert.IsInstanceOf<Activity> (response, "response is Activity");
        }
        
    }

}
