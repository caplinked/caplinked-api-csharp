/* 
 * CapLinked API v1.0
 *
 * Core information security endpoints for managing files/folders, users/groups, uploads/downloads, and more.
 *
 * OpenAPI spec version: 2017-05-23
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Caplinked.Client.SwaggerDateConverter;

namespace Caplinked.Model
{
    /// <summary>
    /// Get team information
    /// </summary>
    [DataContract]
    public partial class Team :  IEquatable<Team>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Team" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Name">Name.</param>
        /// <param name="TeamOwnerId">TeamOwnerId.</param>
        /// <param name="CreatorId">CreatorId.</param>
        /// <param name="AllowedWorkspaces">AllowedWorkspaces.</param>
        /// <param name="AllowedAdmins">AllowedAdmins.</param>
        /// <param name="DrmEnabled">DrmEnabled.</param>
        /// <param name="Watermarking">Watermarking.</param>
        /// <param name="SuppressEmails">SuppressEmails.</param>
        public Team(int? Id = default(int?), string Name = default(string), int? TeamOwnerId = default(int?), int? CreatorId = default(int?), int? AllowedWorkspaces = default(int?), int? AllowedAdmins = default(int?), bool? DrmEnabled = default(bool?), bool? Watermarking = default(bool?), bool? SuppressEmails = default(bool?))
        {
            this.Id = Id;
            this.Name = Name;
            this.TeamOwnerId = TeamOwnerId;
            this.CreatorId = CreatorId;
            this.AllowedWorkspaces = AllowedWorkspaces;
            this.AllowedAdmins = AllowedAdmins;
            this.DrmEnabled = DrmEnabled;
            this.Watermarking = Watermarking;
            this.SuppressEmails = SuppressEmails;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets TeamOwnerId
        /// </summary>
        [DataMember(Name="team_owner_id", EmitDefaultValue=false)]
        public int? TeamOwnerId { get; set; }

        /// <summary>
        /// Gets or Sets CreatorId
        /// </summary>
        [DataMember(Name="creator_id", EmitDefaultValue=false)]
        public int? CreatorId { get; set; }

        /// <summary>
        /// Gets or Sets AllowedWorkspaces
        /// </summary>
        [DataMember(Name="allowed_workspaces", EmitDefaultValue=false)]
        public int? AllowedWorkspaces { get; set; }

        /// <summary>
        /// Gets or Sets AllowedAdmins
        /// </summary>
        [DataMember(Name="allowed_admins", EmitDefaultValue=false)]
        public int? AllowedAdmins { get; set; }

        /// <summary>
        /// Gets or Sets DrmEnabled
        /// </summary>
        [DataMember(Name="drm_enabled", EmitDefaultValue=false)]
        public bool? DrmEnabled { get; set; }

        /// <summary>
        /// Gets or Sets Watermarking
        /// </summary>
        [DataMember(Name="watermarking", EmitDefaultValue=false)]
        public bool? Watermarking { get; set; }

        /// <summary>
        /// Gets or Sets SuppressEmails
        /// </summary>
        [DataMember(Name="suppress_emails", EmitDefaultValue=false)]
        public bool? SuppressEmails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Team {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  TeamOwnerId: ").Append(TeamOwnerId).Append("\n");
            sb.Append("  CreatorId: ").Append(CreatorId).Append("\n");
            sb.Append("  AllowedWorkspaces: ").Append(AllowedWorkspaces).Append("\n");
            sb.Append("  AllowedAdmins: ").Append(AllowedAdmins).Append("\n");
            sb.Append("  DrmEnabled: ").Append(DrmEnabled).Append("\n");
            sb.Append("  Watermarking: ").Append(Watermarking).Append("\n");
            sb.Append("  SuppressEmails: ").Append(SuppressEmails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Team);
        }

        /// <summary>
        /// Returns true if Team instances are equal
        /// </summary>
        /// <param name="other">Instance of Team to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Team other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Name == other.Name ||
                    this.Name != null &&
                    this.Name.Equals(other.Name)
                ) && 
                (
                    this.TeamOwnerId == other.TeamOwnerId ||
                    this.TeamOwnerId != null &&
                    this.TeamOwnerId.Equals(other.TeamOwnerId)
                ) && 
                (
                    this.CreatorId == other.CreatorId ||
                    this.CreatorId != null &&
                    this.CreatorId.Equals(other.CreatorId)
                ) && 
                (
                    this.AllowedWorkspaces == other.AllowedWorkspaces ||
                    this.AllowedWorkspaces != null &&
                    this.AllowedWorkspaces.Equals(other.AllowedWorkspaces)
                ) && 
                (
                    this.AllowedAdmins == other.AllowedAdmins ||
                    this.AllowedAdmins != null &&
                    this.AllowedAdmins.Equals(other.AllowedAdmins)
                ) && 
                (
                    this.DrmEnabled == other.DrmEnabled ||
                    this.DrmEnabled != null &&
                    this.DrmEnabled.Equals(other.DrmEnabled)
                ) && 
                (
                    this.Watermarking == other.Watermarking ||
                    this.Watermarking != null &&
                    this.Watermarking.Equals(other.Watermarking)
                ) && 
                (
                    this.SuppressEmails == other.SuppressEmails ||
                    this.SuppressEmails != null &&
                    this.SuppressEmails.Equals(other.SuppressEmails)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hash = hash * 59 + this.Name.GetHashCode();
                if (this.TeamOwnerId != null)
                    hash = hash * 59 + this.TeamOwnerId.GetHashCode();
                if (this.CreatorId != null)
                    hash = hash * 59 + this.CreatorId.GetHashCode();
                if (this.AllowedWorkspaces != null)
                    hash = hash * 59 + this.AllowedWorkspaces.GetHashCode();
                if (this.AllowedAdmins != null)
                    hash = hash * 59 + this.AllowedAdmins.GetHashCode();
                if (this.DrmEnabled != null)
                    hash = hash * 59 + this.DrmEnabled.GetHashCode();
                if (this.Watermarking != null)
                    hash = hash * 59 + this.Watermarking.GetHashCode();
                if (this.SuppressEmails != null)
                    hash = hash * 59 + this.SuppressEmails.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
